PROGRAM: 
//CRC 
#include <stdio.h> 
#include <conio.h> 
#include <string.h>  
void main() { 
int i,j,keylen,msglen; 
char input[100], key[30],temp[30],quot[100],rem[30],key1[30]; 
clrscr(); 
printf("Enter Data: "); 
gets(input); 
printf("Enter Key: "); 
gets(key); 
keylen=strlen(key); 
msglen=strlen(input); 
strcpy(key1,key); 
for (i=0;i<keylen-1;i++) { 
input[msglen+i]='0'; 
} 
for (i=0;i<keylen;i++) 
temp[i]=input[i]; 
for (i=0;i<msglen;i++) { 
quot[i]=temp[0]; 
if(quot[i]=='0') 
for (j=0;j<keylen;j++) 
key[j]='0'; else 
for (j=0;j<keylen;j++) 
key[j]=key1[j]; 
for (j=keylen-1;j>0;j--) { 
if(temp[j]==key[j]) 
rem[j-1]='0'; else 
rem[j-1]='1'; 
} 
rem[keylen-1]=input[i+keylen]; 
strcpy(temp,rem); 
} 
strcpy(rem,temp); 
printf("\nQuotient is "); 
for (i=0;i<msglen;i++) 
 printf("%c",quot[i]); 
printf("\nRemainder is "); 
for (i=0;i<keylen-1;i++) 
printf("%c",rem[i]); 
printf("\nFinal data is: "); 
for (i=0;i<msglen;i++) 
printf("%c",input[i]); 
for (i=0;i<keylen-1;i++) 
printf("%c",rem[i]); 
getch(); 
} 













 
 
//LRC 
#include<stdio.h> 
#include<conio.h> 
void main(){ 
int data[3][4],i,j,a[4],count=0; 
clrscr(); 
printf("Enter 3 numbers in 4 bit binary format e.g:-1 1 0 0\n"); 
for(i=0;i<3;i++){ 
printf("%d binary number (4bit with space)\n",i+1); 
for(j=0;j<4;j++){ 
scanf("%d",&data[i][j]); 
} 
} 
for(i=0;i<4;i++){ 
for(j=0;j<3;j++){ 
if(data[j][i]==1) 
count++; 
} 
a[i]=count; 
count=0; 
} 
for(i=0;i<4;i++){  
if(a[i]%2==0){ 
a[i]=0; 
}else{ 
a[i]=1; 
} 
} 
printf("\nGiven Data\n"); 
for(i=0;i<3;i++){ 
for(j=0;j<4;j++){ 
printf("%d ",data[i][j]); 
} 
printf("\n"); 
} 
printf("\nData\n"); 
for(i=0;i<3;i++){ 
for(j=0;j<4;j++){ 
printf("%d ",data[i][j]); 
} 
printf("\n"); 
} 
for(i=0;i<4;i++){ 
printf("%d ",a[i]); 
} 
printf(" LRC"); 
getch(); 
} 
 














 
//Error detection and Error Correction using Hamming code 
#include<stdio.h> 
#include<conio.h> 
void main() 
{ 
//Variable declaration 
int data[10], rec[10]; 
int c,c1,c2,c3,i,p; 
 clrscr(); 
//getting 4 bit input 
printf("Enter 4 bits of data one by one:\n"); 
scanf("%d",&data[0]); 
scanf("%d",&data[1]); 
scanf("%d",&data[2]); 
scanf("%d",&data[4]); 
data[6]=data[0]^data[2]^data[4]; 
data[5]=data[0]^data[1]^data[4]; 
data[3]=data[0]^data[1]^data[2]; 
data[7]=data[0]^data[1]^data[2]^data[3]^data[4]^data[5]^data[6]; 
printf ("The encoded data is:\n"); 
for(i=0;i<=7;i++) 
{ 
printf("%d",data[i]); 
} 
printf("\n Enter the received data bits one by one:\n"); 
 
for(i=0;i<=7;i++) 
scanf("%d", &rec[i]); 
 
c1=rec[6]^rec[0]^rec[2]^rec[4]; 
c2=rec[5]^rec[0]^rec[1]^rec[4]; 
c3=rec[3]^rec[0]^rec[1]^rec[2]; 
p=rec[0]^rec[1]^rec[2]^rec[3]^rec[4]^rec[5]^rec[6]; 
c=c3*4+c2*2+c1; 
 
if(c==0) 
{ 
if(p==rec[7]) 
{ 
printf("\n NO error while transmission of data\n"); 
} 
else 
{ 
printf("\n Parrity bit error\n"); 
} 
} 
else 
{ 
if(p!=rec[7]) 
{ 
printf("\n Error on position : %d",c); 
printf("\nData sent : "); 
for(i=0;i<=7;i++) 
printf("%d", data[i]); 
printf("\n Data Received:"); 
for(i=0;i<=7;i++) 
printf("%d",rec[i]); 
printf ("\n The correct message is\n"); 
if(rec[7-c]==0) 
rec[7-c]=1; 
else 
rec[7-c]=0; 
 
for(i=0;i<=7;i++) 
printf("%d",rec[i]); 
} 
else 
{ 
printf("\n Two bit error detected. Unable to correct\n"); 
} 
} 
getch(); 
} 
 
